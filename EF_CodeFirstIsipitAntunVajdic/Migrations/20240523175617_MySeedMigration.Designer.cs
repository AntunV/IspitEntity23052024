// <auto-generated />
using System;
using EF_CodeFirstIsipitAntunVajdic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_CodeFirstIsipitAntunVajdic.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240523175617_MySeedMigration")]
    partial class MySeedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_CodeFirstIsipitAntunVajdic.Models.Dbo.Common.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("GradeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeId = 1,
                            GradeName = "P.E",
                            Section = "B",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 2,
                            GradeName = "Math",
                            Section = "A",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 3,
                            GradeName = "History",
                            Section = "C",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 4,
                            GradeName = "P.E",
                            Section = "D",
                            StudentId = 3
                        },
                        new
                        {
                            GradeId = 5,
                            GradeName = "Chemistry",
                            Section = "E",
                            StudentId = 3
                        },
                        new
                        {
                            GradeId = 6,
                            GradeName = "Chemistry",
                            Section = "B",
                            StudentId = 1
                        },
                        new
                        {
                            GradeId = 7,
                            GradeName = "English",
                            Section = "B",
                            StudentId = 3
                        },
                        new
                        {
                            GradeId = 8,
                            GradeName = "English",
                            Section = "B",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 9,
                            GradeName = "P.E",
                            Section = "B",
                            StudentId = 2
                        },
                        new
                        {
                            GradeId = 10,
                            GradeName = "Math",
                            Section = "B",
                            StudentId = 1
                        });
                });

            modelBuilder.Entity("EF_CodeFirstIsipitAntunVajdic.Models.Dbo.Common.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DateOfBirth = new DateTime(1998, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 182.5m,
                            StudentName = "Marko Markic",
                            Weight = 77.8f
                        },
                        new
                        {
                            StudentId = 2,
                            DateOfBirth = new DateTime(1995, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 190.5m,
                            StudentName = "Petar Petrovic",
                            Weight = 85f
                        },
                        new
                        {
                            StudentId = 3,
                            DateOfBirth = new DateTime(1994, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Height = 180.5m,
                            StudentName = "Danijel Radovac",
                            Weight = 81.2f
                        });
                });

            modelBuilder.Entity("EF_CodeFirstIsipitAntunVajdic.Models.Dbo.Common.Grade", b =>
                {
                    b.HasOne("EF_CodeFirstIsipitAntunVajdic.Models.Dbo.Common.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EF_CodeFirstIsipitAntunVajdic.Models.Dbo.Common.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
